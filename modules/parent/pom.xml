<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.surfilter</groupId>
	<artifactId>surfilter-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Surfilter :: Module :: Parent</name>
	<packaging>pom</packaging>

	<properties>
		<!-- 主要依赖库的版本定义 -->
		<springside.version>1.0.0-SNAPSHOT</springside.version>
		<windycollector.version>4.1.1.0-SNAPSHOT</windycollector.version>
		<surfilter-text.version>1.0.1-SNAPSHOT</surfilter-text.version>
		<surfilter-datas-sdk.version>1.0.0-SNAPSHOT</surfilter-datas-sdk.version>
		
		<spring.version>3.2.0.RELEASE</spring.version>
		<hibernate.version>4.1.9.Final</hibernate.version>
		<mybatis.version>3.1.1</mybatis.version>
		<spring-data-jpa.version>1.2.0.RELEASE</spring-data-jpa.version>
		
		<activemq.version>5.7.0</activemq.version>
		<quartz.version>2.1.6</quartz.version>
		<ehcache.version>2.6.2</ehcache.version>
		<jedis.version>2.0.0</jedis.version>
		<spymemcached.version>2.8.9</spymemcached.version>
		
		<hibernate-validator.version>4.3.1.Final</hibernate-validator.version>
		<jolokia.version>1.0.6</jolokia.version>
		
		<slf4j.version>1.7.2</slf4j.version>
		<logback.version>1.0.9</logback.version>
		
		<commons-lang3.version>3.1</commons-lang3.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<commons-fileupload.version>1.2.1</commons-fileupload.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		
		<freemarker.version>2.3.19</freemarker.version>
		<sitemesh.version>2.4.2</sitemesh.version>
		<shiro.version>1.2.2</shiro.version>
		<cxf.version>2.7.1</cxf.version>
		<shiro-freemarker-tags.version>0.1</shiro-freemarker-tags.version>
		
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<powermock.version>1.5</powermock.version>
		
		<selenium.version>2.39.0</selenium.version>
		<phantomjsdriver.version>1.1.0</phantomjsdriver.version>
		
		<jetty.version>7.6.8.v20121106</jetty.version>
		<h2.version>1.3.170</h2.version>
		<one2team.version>2.0</one2team.version>
		<poi-excelant.version>3.9</poi-excelant.version>
		
		<spring-data-hadoop.version>1.0.0.RELEASE</spring-data-hadoop.version>
		<!--<elasticsearch.version>0.20.5</elasticsearch.version>
		<elasticsearch.version>1.0.1</elasticsearch.version>-->
		<elasticsearch.version>1.2.0</elasticsearch.version>
		<projectx.version>0.2</projectx.version>
		<!--<lucene-core.version>3.6.2</lucene-core.version>-->
		<lucene-core.version>4.8.1</lucene-core.version>
		<hadoop-core.version>1.1.0</hadoop-core.version>
		<hbase.version>0.95.0</hbase.version>
		<htrace.version>1.50</htrace.version>
		<zookeeper.version>3.4.5</zookeeper.version>
		<spring-data-neo4j.version>2.2.0.RELEASE</spring-data-neo4j.version>
		
		<guava.version>14.0-rc2</guava.version>
		<joda-time.version>2.1</joda-time.version>
		<dozer.version>5.4.0</dozer.version>
		<gson.version>2.2.2</gson.version>
		
		<json-lib.version>2.4</json-lib.version>
		<poi.version>3.9</poi.version>
		<jackson.version>2.1.2</jackson.version>
		
		<httpclient.version>4.3</httpclient.version>
		<jsoup.version>1.7.2</jsoup.version>
		<commons-httpclient.version>3.1-rc1</commons-httpclient.version>
		<juniversalchardet.version>1.0.3</juniversalchardet.version>
		<boilerpipe.version>1.1.0</boilerpipe.version>
		<xerces.version>2.11.0</xerces.version>
		<nekohtml.version>1.9.14</nekohtml.version>
		
		<ikanalyzer.version>2012_u5</ikanalyzer.version>
		<snappy-java.version>1.0.4.1</snappy-java.version>
		<expression.version>2.1.2</expression.version>
		
		<jta.version>1.1</jta.version>
		<atomikos-util.version>3.8.0</atomikos-util.version>
		<transactions-jta.version>3.8.0</transactions-jta.version>
		<transactions.version>3.8.0</transactions.version>
		<transactions-jdbc.version>3.8.0</transactions-jdbc.version>
		<transactions-api.version>3.8.0</transactions-api.version>
		<transactions-jdbc-deprecated.version>3.8.0</transactions-jdbc-deprecated.version>
		
		<pdfbox.version>0.7.3</pdfbox.version>
		<protostuff.version>1.0.7</protostuff.version>
		<pinyin4j.version>2.5.0</pinyin4j.version>
		
		<protobuf-java.version>2.4.1</protobuf-java.version>

		<batik-codec.version>1.7</batik-codec.version>
		<batik-transcoder.version>1.7</batik-transcoder.version>
		
		<netty.version>3.2.9.Final</netty.version>
		<groovy.version>2.1.5</groovy.version>
		
		<!-- Plugin 的属性定义 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.7</jdk.version>
	</properties>

	<!-- 设定除中央仓库(repo1.maven.org/maven2/)外的其他仓库, 按设定顺序进行查找. -->
	<!-- --><repositories>
		<!-- 如有 Nexus 私服, 取消注释并指向正确的服务器地址.-->
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.18.154:8081/nexus/content/groups/public</url>
		</repository>
		<!--
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>spy</id>
			<name>Spy Repository</name>
			<url>http://files.couchbase.com/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
	    </repository>-->
	<!----></repositories>

	<!-- 设定插件仓库 如有 Nexus 私服, 取消注释并指向正确的服务器地址.-->
	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.18.154:8081/nexus/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<!-- 设定发布仓库 如有 Nexus 私服, 取消注释并指向正确的服务器地址.-->
	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<url>http://192.168.18.154:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://192.168.18.154:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 和 artifactId 即可 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.surfilter</groupId>
				<artifactId>pscms-datas-sdk</artifactId>
				<version>${surfilter-datas-sdk.version}</version>
			</dependency>
			
			<!-- SPRINGSIDE MODULES begin -->
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-core</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-extension</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<!-- SPRINGSIDE MODULES end -->

			<!-- Surfilter MODULES begin -->
			<dependency>
				<groupId>com.surfilter</groupId>
				<artifactId>surfilter-text</artifactId>
				<version>${surfilter-text.version}</version>
			</dependency>
			<!-- Surfilter MODULES end -->

			<!-- SPRING basic begin(一般不需要显式定义) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- email/scheduler/freemarker -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- SPRING basic end -->

			<!-- AOP begin-->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.7.1</version>
				<scope>runtime</scope>
			</dependency>
			<!-- AOP end -->

			<!-- PERSISTENCE begin -->
			<!-- hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- spring data jpa -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data-jpa.version}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit-dep</artifactId>
					</exclusion>
				</exclusions>
        	</dependency>

			<!-- mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.1.1</version>
			</dependency>

			<!-- spring orm -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- optional datasource pool -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- PERSISTENCE end -->

			<!-- WEB begin -->
			<!-- spring mvc -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- sitemesh -->
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>sitemesh</artifactId>
				<version>${sitemesh.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- j2ee web spec -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<!-- WEB end -->

			<!-- SECURITY begin -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!-- SECURITY end -->

			<!-- SOAP begin -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<!-- use javax.mail.mail instead -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
					<!-- use javax.activation.activation instead -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<!-- see above -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<!-- SOAP end -->

			<!-- JAX-RS begin -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
	            <groupId>com.fasterxml.jackson.jaxrs</groupId>
	            <artifactId>jackson-jaxrs-json-provider</artifactId>
	            <version>${jackson.version}</version>
        	</dependency>
			<!-- JAX-RS end -->

			<!-- JMS begin -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.activemq.protobuf</groupId>
						<artifactId>activemq-protobuf</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.osgi</groupId>
						<artifactId>spring-osgi-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- JMS end -->

			<!-- TIMER -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<!-- CACHE begin -->
			<!-- memcached -->
			<dependency>
				<groupId>spy</groupId>
				<artifactId>spymemcached</artifactId>
				<version>${spymemcached.version}</version>
			</dependency>

			<!-- ehcache -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<!-- CACHE end -->

			<!-- jolokia Restful JMX begin -->
			<dependency>
				<groupId>org.jolokia</groupId>
				<artifactId>jolokia-core</artifactId>
				<version>${jolokia.version}</version>
			</dependency>
			<!-- jolokia end-->

			<!-- JSR303 Bean Validator -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<!-- JSON begin -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- JSON end -->

			<!-- XML begin -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 重新定义Java XPath Engine到最新版，避免旧版那些不必要的依赖 -->
			<dependency>
				<groupId>jaxen</groupId>
				<artifactId>jaxen</artifactId>
				<version>1.1.4</version>
			</dependency>
			<!-- XML end -->

			<!-- LOGGING begin -->
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- logback -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- log4j 实际调用slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- common-logging 实际调用slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- java.util.logging 实际调用slf4j -->
			<dependency>
        		<groupId>org.slf4j</groupId>
        		<artifactId>jul-to-slf4j</artifactId>
        		<version>${slf4j.version}</version>
        		<scope>runtime</scope>
      		</dependency>

			<!-- log4jdbc -->
			<dependency>
				<groupId>org.lazyluke</groupId>
				<artifactId>log4jdbc-remix</artifactId>
				<version>0.2.7</version>
				<scope>runtime</scope>
			</dependency>
			<!-- LOGGING end -->

			<!-- GENERAL UTILS begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>

			<!-- google java library -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- joda -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-jsptags</artifactId>
				<version>1.1.1</version>
			</dependency>
			<!-- joda for hibernate -->
			<dependency>
				<groupId>org.jadira.usertype</groupId>
				<artifactId>usertype.core</artifactId>
				<version>3.0.0.GA</version>
			</dependency>
			<!-- joda for jackson -->
			<dependency>
	            <groupId>com.fasterxml.jackson.datatype</groupId>
	            <artifactId>jackson-datatype-joda</artifactId>
	            <version>${jackson.version}</version>
        	</dependency>
			<!-- GENERAL UTILS end -->

			<!-- OTHER TOOLS begin -->
			<!-- pojo copy -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${dozer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- httpclient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>com.googlecode.juniversalchardet</groupId>
				<artifactId>juniversalchardet</artifactId>
				<version>${juniversalchardet.version}</version>
			</dependency>
			
			<dependency>
				<groupId>de.l3s.boilerpipe</groupId>
				<artifactId>boilerpipe</artifactId>
				<version>${boilerpipe.version}</version>
			</dependency>
			
			<dependency>
				<groupId>nekohtml</groupId>
				<artifactId>nekohtml</artifactId>
				<version>${nekohtml.version}</version>
			</dependency>
			
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
			</dependency>
			
			<!-- template engine -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- email -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.5</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>
			<!-- OTHER TOOLS end -->

			<!-- TEST begin -->
			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- mockito -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- springside -->
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-test</artifactId>
				<version>${springside.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- selenium 2.0 -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-android-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-iphone-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib-nodep</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.detro.ghostdriver</groupId>
				<artifactId>phantomjsdriver</artifactId>
				<version>${phantomjsdriver.version}</version>
			</dependency>
			
			<!-- elasticsearch -->
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectx</groupId>
				<artifactId>projectx_es</artifactId>
				<version>${projectx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${lucene-core.version}</version>
			</dependency>

			<!-- hadoop hbase zookeeper -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-hadoop</artifactId>
				<version>${spring-data-hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-core</artifactId>
				<version>${hadoop-core.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>tomcat</groupId>
						<artifactId>jasper-runtime</artifactId>
					</exclusion>
					<exclusion>
						<groupId>tomcat</groupId>
						<artifactId>jasper-compiler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-util</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jsp-api-2.1</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jsp-2.1</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-el</groupId>
						<artifactId>commons-el</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.surfilter.hbase</groupId>
				<artifactId>hbase</artifactId>
				<version>${hbase.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
			<!--<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-neo4j</artifactId>
				<version>${spring-data-neo4j.version}</version>
			</dependency>-->

			<!-- google -->
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf-java.version}</version>
			</dependency>

			<dependency>
				<groupId>org.one2team</groupId>
				<artifactId>one2team</artifactId>
				<version>${one2team.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>atomikos-util</artifactId>
				<version>${atomikos-util.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>transactions-jta</artifactId>
				<version>${transactions-jta.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>transactions</artifactId>
				<version>${transactions.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>transactions-jdbc</artifactId>
				<version>${transactions-jdbc.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>transactions-api</artifactId>
				<version>${transactions-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.atomikos</groupId>
				<artifactId>transactions-jdbc-deprecated</artifactId>
				<version>${transactions-jdbc-deprecated.version}</version>
			</dependency>

			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${json-lib.version}</version>
				<classifier>jdk15</classifier>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
			  <groupId>org.apache.poi</groupId>
			  <artifactId>poi-excelant</artifactId>
			  <version>${poi-excelant.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>com.shiro.freemarker.tags</groupId>
				<artifactId>shiro-freemarker-tags</artifactId>
				<version>${shiro-freemarker-tags.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>

			</dependency>

			<!-- text analyzer -->
			<dependency>
				<groupId>org.wltea.analyzer</groupId>
				<artifactId>ikanalyzer</artifactId>
				<version>${ikanalyzer.version}</version>
			</dependency>
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId>
				<version>${snappy-java.version}</version>
			</dependency>

			<!-- jetty -->
			<dependency>
				<groupId>org.eclipse.jetty.aggregate</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jsp</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- h2 -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- memcached simulator -->
			<dependency>
				<groupId>com.thimbleware.jmemcached</groupId>
				<artifactId>jmemcached-core</artifactId>
				<version>1.0.0</version>
				<scope>test</scope>
			</dependency>

			<!-- smtp server simulator -->
			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail</artifactId>
				<version>1.3.1b</version>
				<scope>test</scope>
			</dependency>
			<!-- TEST end -->

			<!-- Highcharts export begin -->
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-codec</artifactId>
				<version>${batik-codec.version}</version>
			</dependency>

			<dependency>
				<groupId>com.surfilter</groupId>
				<artifactId>windycollector-core</artifactId>
				<version>${windycollector.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-transcoder</artifactId>
				<version>${batik-transcoder.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>fop</artifactId>
						<groupId>org.apache.xmlgraphics</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Highcharts export end -->

		</dependencies>
	</dependencyManagement>
	
	<!-- 插件配置 -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>

				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<!-- test插件, 仅测试名称为*Test的类, 使用支持分组测试的surefire-junit47 driver -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.4</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.12.4</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- 增加更多的Source和Test Source目录插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
				</plugin>

        		<!-- cobertura 测试覆盖率统计插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<warName>${project.artifactId}</warName>
					</configuration>
				</plugin>

				<!-- jar打包相关插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<!-- clean插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<!-- install插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>

				<!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>
					<executions>
						<execution>
							<id>enforce-banned-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
                  						<version>3.3.3</version>
                					</requireMavenVersion>
                					<requireJavaVersion>
                  						<version>1.7</version>
                					</requireJavaVersion>
									<bannedDependencies>
										<searchTransitive>true</searchTransitive>
										<excludes>
											<exclude>commons-logging</exclude>
											<exclude>aspectj:aspectj*</exclude>
											<exclude>org.springframework:2.*</exclude>
											<exclude>org.springframework:3.0.*</exclude>
										</excludes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- eclipse插件, 设定下载依赖包的source code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
						<!-- 增加设置项目encoding的文件 -->
						<additionalConfig>
							<file>
								<name>.settings/org.eclipse.core.resources.prefs</name>
								<content>
						            <![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${project.build.sourceEncoding}${line.separator}]]>
								</content>
							</file>
						</additionalConfig>
					</configuration>
				</plugin>

				<!-- jetty插件 -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
				</plugin>

				<!-- assembly插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>

				<!-- dependency相关插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.0</version>
				</plugin>

				<!-- ant插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<!-- exec java 插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>

				<!-- maven deploy 插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- 执行@Category(Smoke.class)的TestCase -->
		<profile>
			<id>run-smoke</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<!--<configuration>
							<includedGroups>org.springside.modules.test.category.Smoke</includedGroups>
						</configuration>-->
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 忽略所有@Category(UnStable.class)的TestCase -->
		<profile>
			<id>skip-unstable</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludedGroups>org.springside.modules.test.category.UnStable</excludedGroups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 执行@Category(UnStable.class)的TestCase -->
		<!--<profile>
			<id>run-unstable</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includedGroups>org.springside.modules.test.category.UnStable</includedGroups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>-->
	</profiles>
</project>